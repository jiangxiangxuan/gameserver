// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace platformprotocol {
class CVerifyTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CVerifyToken>
      _instance;
} _CVerifyToken_default_instance_;
class SVerifyTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVerifyToken>
      _instance;
} _SVerifyToken_default_instance_;
}  // namespace platformprotocol
namespace protobuf_login_2eproto {
void InitDefaultsCVerifyTokenImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::platformprotocol::_CVerifyToken_default_instance_;
    new (ptr) ::platformprotocol::CVerifyToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformprotocol::CVerifyToken::InitAsDefaultInstance();
}

void InitDefaultsCVerifyToken() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCVerifyTokenImpl);
}

void InitDefaultsSVerifyTokenImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::platformprotocol::_SVerifyToken_default_instance_;
    new (ptr) ::platformprotocol::SVerifyToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformprotocol::SVerifyToken::InitAsDefaultInstance();
}

void InitDefaultsSVerifyToken() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSVerifyTokenImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platformprotocol::CVerifyToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platformprotocol::CVerifyToken, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::platformprotocol::SVerifyToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::platformprotocol::CVerifyToken)},
  { 6, -1, sizeof(::platformprotocol::SVerifyToken)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformprotocol::_CVerifyToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformprotocol::_SVerifyToken_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013login.proto\022\020platformprotocol\"\035\n\014CVeri"
      "fyToken\022\r\n\005Token\030\001 \001(\t\"\016\n\014SVerifyTokenb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 86);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_login_2eproto
namespace platformprotocol {

// ===================================================================

void CVerifyToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CVerifyToken::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CVerifyToken::CVerifyToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_login_2eproto::InitDefaultsCVerifyToken();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformprotocol.CVerifyToken)
}
CVerifyToken::CVerifyToken(const CVerifyToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:platformprotocol.CVerifyToken)
}

void CVerifyToken::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CVerifyToken::~CVerifyToken() {
  // @@protoc_insertion_point(destructor:platformprotocol.CVerifyToken)
  SharedDtor();
}

void CVerifyToken::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CVerifyToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CVerifyToken::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CVerifyToken& CVerifyToken::default_instance() {
  ::protobuf_login_2eproto::InitDefaultsCVerifyToken();
  return *internal_default_instance();
}


void CVerifyToken::Clear() {
// @@protoc_insertion_point(message_clear_start:platformprotocol.CVerifyToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CVerifyToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformprotocol.CVerifyToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platformprotocol.CVerifyToken.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformprotocol.CVerifyToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformprotocol.CVerifyToken)
  return false;
#undef DO_
}

void CVerifyToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformprotocol.CVerifyToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platformprotocol.CVerifyToken.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:platformprotocol.CVerifyToken)
}

::google::protobuf::uint8* CVerifyToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platformprotocol.CVerifyToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platformprotocol.CVerifyToken.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformprotocol.CVerifyToken)
  return target;
}

size_t CVerifyToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformprotocol.CVerifyToken)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CVerifyToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformprotocol.CVerifyToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CVerifyToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CVerifyToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformprotocol.CVerifyToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformprotocol.CVerifyToken)
    MergeFrom(*source);
  }
}

void CVerifyToken::MergeFrom(const CVerifyToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformprotocol.CVerifyToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void CVerifyToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformprotocol.CVerifyToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CVerifyToken::CopyFrom(const CVerifyToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformprotocol.CVerifyToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CVerifyToken::IsInitialized() const {
  return true;
}

void CVerifyToken::Swap(CVerifyToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CVerifyToken::InternalSwap(CVerifyToken* other) {
  using std::swap;
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CVerifyToken::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SVerifyToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVerifyToken::SVerifyToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_login_2eproto::InitDefaultsSVerifyToken();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformprotocol.SVerifyToken)
}
SVerifyToken::SVerifyToken(const SVerifyToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:platformprotocol.SVerifyToken)
}

void SVerifyToken::SharedCtor() {
  _cached_size_ = 0;
}

SVerifyToken::~SVerifyToken() {
  // @@protoc_insertion_point(destructor:platformprotocol.SVerifyToken)
  SharedDtor();
}

void SVerifyToken::SharedDtor() {
}

void SVerifyToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SVerifyToken::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SVerifyToken& SVerifyToken::default_instance() {
  ::protobuf_login_2eproto::InitDefaultsSVerifyToken();
  return *internal_default_instance();
}


void SVerifyToken::Clear() {
// @@protoc_insertion_point(message_clear_start:platformprotocol.SVerifyToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SVerifyToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformprotocol.SVerifyToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:platformprotocol.SVerifyToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformprotocol.SVerifyToken)
  return false;
#undef DO_
}

void SVerifyToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformprotocol.SVerifyToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:platformprotocol.SVerifyToken)
}

::google::protobuf::uint8* SVerifyToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:platformprotocol.SVerifyToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformprotocol.SVerifyToken)
  return target;
}

size_t SVerifyToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformprotocol.SVerifyToken)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SVerifyToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformprotocol.SVerifyToken)
  GOOGLE_DCHECK_NE(&from, this);
  const SVerifyToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SVerifyToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformprotocol.SVerifyToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformprotocol.SVerifyToken)
    MergeFrom(*source);
  }
}

void SVerifyToken::MergeFrom(const SVerifyToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformprotocol.SVerifyToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SVerifyToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformprotocol.SVerifyToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SVerifyToken::CopyFrom(const SVerifyToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformprotocol.SVerifyToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVerifyToken::IsInitialized() const {
  return true;
}

void SVerifyToken::Swap(SVerifyToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVerifyToken::InternalSwap(SVerifyToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SVerifyToken::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace platformprotocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::platformprotocol::CVerifyToken* Arena::Create< ::platformprotocol::CVerifyToken >(Arena* arena) {
  return Arena::CreateInternal< ::platformprotocol::CVerifyToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::platformprotocol::SVerifyToken* Arena::Create< ::platformprotocol::SVerifyToken >(Arena* arena) {
  return Arena::CreateInternal< ::platformprotocol::SVerifyToken >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
